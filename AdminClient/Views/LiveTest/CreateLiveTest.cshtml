@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Live Test";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<!-- PAGE-HEADER -->
<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-file-text mr-1"></i>Admin Consol</a></li>
        <li class="breadcrumb-item active" aria-current="page">LiveTest Create</li>
    </ol>
    <div class="ml-auto">
        <a href="~/LiveTest/LiveTestList" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> View
        </a>
    </div>
</div>
<!-- PAGE-HEADER END -->

<div class="row">
    <div class="col-md">
        <div class="card overflow-hidden">
            <div class="card-header">
                <h3 class="card-title">LiveTest Create</h3>
            </div>
            <div class="card-body">
                <form action="#" role="form" class="validate" id="formPost">
                    <div class="row">

                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="form-label">Pandit Name &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <div class="input-box">
                                    <select class="form-control" id="SelectPandit">
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="form-label">Question Name &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <div class="input-box">
                                    <select class="form-control" id="SelectQuestion">
                                    </select>
                                </div>
                            </div>
                        </div>



                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="form-label">LiveTest &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <input type="file" class="form-control" id="LiveTestAnswer" placeholder="Live Test" required>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button type="button" id="btncreate" class="btn btn-radius btn-success">Create</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@section scripts {
    <script>

        Getpandit()
        async function Getpandit(Id) {
            var opt = '';
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Pandit/GetPanditList",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (res) {
                    var options = [];
                    options.push(' <option value = ""> Select Pandit </option> ');
                    for (var i = 0; i < res.data.length; i++) {
                        // if (Id == res.data[i].panditId) {
                        //     opt = 'selected'
                        // } else {
                        //     opt = '';
                        // }
                        options.push('<option value = "' + res.data[i].panditId + '" ' + opt + ' > ' + res.data[i].panditName + '</option>');
                    }
                    $("#SelectPandit").html(options.join(''));
                },

                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }


        Getquestion()
        async function Getquestion(Id) {
            var opt = '';
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Question/GetQuestionList",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (res) {
                    var options = [];
                    options.push(' <option value = ""> Select Question </option> ');
                    for (var i = 0; i < res.data.length; i++) {
                        options.push('<option value = "' + res.data[i].questionId + '" ' + opt + ' > ' + res.data[i].questionName + '</option>');
                    }
                    $("#SelectQuestion").html(options.join(''));
                },

                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

      


        $("#btncreate").click(function (e) {
            if (!document.getElementById("formPost").checkValidity()) {
                e.preventDefault();
            } else {
                imgPath = '';
                var totalFiles = document.getElementById('LiveTestAnswer').files.length;
                if (totalFiles > 0) {
                    uploadFile();
                }

                var model = {
                    panditId: parseInt($("#SelectPandit").val()),
                    questionId: parseInt($("#SelectQuestion").val()),

                    liveTestAnswer: imgPath,
                  
                    createdBy: @Context.Session.GetInt32("UserId"),
                };

                console.log(model);

                $.ajax({
                    type: "POST",
                    url: "@apiUrl/api/LiveTest/LiveTestCreate",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status === 200) {
                            Swal.fire({
                                icon: "success",
                                title: "LiveTest Create",
                                text: "Successfully Created!",
                            }).then(function () {
                                location.reload(); // Refresh the page
                            });

                            //preloader.addClass("d-none");
                        } else if (data.status === "Duplicate") {
                            Swal.fire({
                                icon: "warning",
                                title: "LiveTest Already Exists!",
                                text: data.responseMsg,
                            }).then(function () {
                                location.reload(); // Refresh the page
                            });
                        } else if (data.status === "error") {
                            Swal.fire({
                                icon: "warning",
                                title: "Validation Alert!",
                                text: data.responseMsg,
                            }).then(function () {
                                location.reload(); // Refresh the page
                            });
                        } else {
                            Swal.fire({
                                icon: "warning",
                                title: "Validation Alert!",
                                text: "Something unexpected!",
                            }).then(function () {
                                location.reload(); // Refresh the page
                            });
                        }
                        preloader.addClass("d-none");
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        } else if (data.status == 400) {
                            sweetAlert("Validation Alert!", "Please check input data!", "warning");
                        }
                    }
                });


            }
        });



        function uploadFile() {
            var totalFiles = document.getElementById('LiveTestAnswer').files.length;
            if (totalFiles > 0) {
                var formData = new FormData();
                var files = document.getElementById('LiveTestAnswer').files;
                formData.append("file", files[0]);
                $.ajax(
                    {
                        url: "/Upload/ImgUpload",
                        data: formData,
                        processData: false,
                        contentType: false,
                        async: false,
                        type: "POST",
                        success: function (data) {
                            imgPath = data;

                        },
                        error: function (data) {
                            window.location.replace('/Message/SessionExpire');
                        }
                    }
                );
            }

        }

    </script>

}